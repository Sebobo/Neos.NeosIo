prototype(Neos.MarketPlace:RepositoryStorage) < prototype(Neos.MarketPlace:DefaultPage) {
    head {
        atomFeedLink = Neos.Fusion:Tag {
            @position = 'after metaTags'
            attributes {
                rel = 'alternate'
                type = 'application/atom+xml'
                title = "Atom-Feed with the latest package releases"
                href = Neos.Neos:NodeUri {
                    node = ${documentNode}
                    absolute = true
                    format = 'atom'
                }
            }
        }
    }

    body {
        content {
            main = Neos.Fusion:Join {
                content = Neos.Neos:PrimaryContent {
                    nodePath = 'main'
                }
                marketplace = Neos.MarketPlace:Search
            }
        }
    }

    @cache {
        entryIdentifier {
            searchQuery = ${MarketCaching.queryCacheKey(request.arguments.search)}
            searchPagination = ${MarketCaching.paginationCacheKey(request)}
        }

        maximumLifetime = ${String.isBlank(request.arguments.search) ? '86400' : '3600'}
    }
}
